{"version":3,"sources":["components/SideBar/SubMenu.js","services/api.js","auth.js","components/SideBar/index.js","components/Content/Navbar.js","protected.route.js","store/actions/page.js","services/patientsService.js","components/Patients/storePatient.js","components/Mask/index.js","components/Patients/patients.js","store/actions/patients.js","components/Content/index.js","components/Login/index.js","App.js","serviceWorker.js","store/reducers/pageReducer.js","store/reducers/patientsReducer.js","store/reducers/index.js","index.js"],"names":["SubMenu","props","useState","collapsed","setCollapsed","icon","title","items","NavItem","onClick","className","classNames","NavLink","Collapse","isOpen","navbar","map","item","index","key","tag","Link","to","target","api","axios","create","baseURL","interceptors","request","use","headers","localStorage","getItem","error","this","authenticated","data","callBack","elseCallBack","post","then","response","status","setItem","access_token","catch","err","console","log","submenus","SideBar","color","toggle","style","faHospitalAlt","Nav","cursor","vertical","faUsers","faUserMd","auth","logout","window","location","reload","faPowerOff","connect","store","pageTitle","pageReducer","setOpen","useEffect","Navbar","light","expand","Button","faBars","NavbarToggler","ProtectedRoute","Component","component","rest","render","isAuthenticated","pathname","state","from","setPageTitle","type","payload","get","id","delete","body","dispatch","actions","cpf","setCpf","currency","setCurrency","dateColor","setDateColor","setBody","handleDateChage","handleChangeBody","e","value","name","handleChangeUser","user","handleChangeAddress","address","onSubmit","preventDefault","patientsService","res","Swal","fire","confirmButtonColor","text","Row","Col","md","size","htmlFor","onChange","placeholder","marginTop","replace","cpfMask","maxLength","marginBottom","onKeyDown","defaultChecked","Patients","initialState","fetchPatients","setState","patients","handleInput","filteredPatients","filter","patient","toLocaleLowerCase","search","includes","deletePatient","showCancelButton","confirmButtonText","cancelButtonText","cancelButtonColor","rg","phone","faEdit","faTrash","patientsReducer","filterPatients","Container","fluid","exact","path","StorePatients","Login","email","setEmail","password","setPassword","incorrectMessage","setIncorrectMessage","offset","login","history","push","required","Content","Boolean","hostname","match","initState","action","combineReducers","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1cab13df.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport  { Collapse, NavItem, NavLink } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nconst SubMenu = props => {\n  \n  const [collapsed, setCollapsed] = useState(true)\n  const toggleNavbar = () => setCollapsed(!collapsed)\n  const { icon, title, items } = props;\n \n  return (\n    <div>\n      <NavItem onClick={toggleNavbar} className={classNames({'menu-open': !collapsed})}>\n        <NavLink className=\"dropdown-toggle\">\n          <FontAwesomeIcon icon={icon} className=\"mr-2\"/>{title}\n        </NavLink>\n      </NavItem>\n      <Collapse isOpen={!collapsed} navbar className={classNames('items-menu',{'mb-1': !collapsed})}>\n        {items.map((item, index) => (\n            <NavItem key={index} className=\"pl-4\">\n              <NavLink tag={Link} to={item.target}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n            ))}\n      </Collapse>\n    </div>\n  );\n}\n\nexport default SubMenu;","import axios from 'axios'\n\nconst api = axios.create({ \n    baseURL: 'https://appointments12.herokuapp.com/api/' \n\n})\n\napi.interceptors.request.use(\n    request => {\n        request.headers = {\n            'Authorization': \"Bearer \" + localStorage.getItem('access_token'),\n        }\n      return request\n    },\n    error => error\n)\n\nexport default api\n","import api from './services/api'\n\nclass Auth{\n    constructor(props){\n        this.authenticated = false\n    }\n\n    login(data, callBack, elseCallBack){\n\n        api.post('/auth/login', data)\n            .then(response => {\n                if(response.status === 200){\n                    localStorage.setItem(\"access_token\", response.data.access_token)\n                    this.authenticated = true\n                    \n                    callBack()\n                }\n                else{\n                    this.authenticated = false\n                    elseCallBack()\n                }\n            })\n            .catch(err => {\n                this.authenticated = false\n                elseCallBack()\n                console.log(err)\n            })\n\n    }\n\n    logout(callBack){\n        this.authenticated = false\n        callBack()\n    }\n\n    isAuthenticated(){\n        return this.authenticated\n    }\n}\n\nexport default new Auth()","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faPowerOff, faHospitalAlt, faUserMd, faUsers } from '@fortawesome/free-solid-svg-icons'\nimport SubMenu from './SubMenu'\nimport { NavItem, NavLink, Nav } from 'reactstrap'\nimport classNames from 'classnames'\nimport auth from '../../auth'\nimport \"./style.scss\"\n\nconst SideBar = props => (\n\t<div className={classNames('sidebar', {'is-open': props.isOpen})}>\n\t\t<div className=\"sidebar-header\">\n\t\t<span color=\"info\" onClick={props.toggle} style={{color: '#fff'}}>&times</span>\n\t\t<h3 className=\"sidebar-title\"><FontAwesomeIcon icon={faHospitalAlt} /> Consultas</h3>\n\t\t</div>\n\t\t<div className=\"side-menu\">\n\t\t<Nav style={{cursor: 'pointer'}} vertical className=\"list-unstyled pb-3\">\n\t\t\t<p>Bem vindo Usuário</p>\n\t\t\t<SubMenu title=\"Pacientes\" icon={faUsers} items={submenus[0]}/>\n\t\t\t<SubMenu title=\"Agendamento\" icon={faUserMd} items={submenus[1]}/>\n\t\t\t<NavItem>\n\t\t\t<NavLink onClick={() => auth.logout(() => window.location.reload(false))}>\n\t\t\t\t<FontAwesomeIcon icon={faPowerOff} className=\"mr-2\"/>Sair\n\t\t\t</NavLink>\n\t\t\t</NavItem>\n\t\t</Nav>\t\t\t\t\n\t\t</div>\n\t</div>\n)\n\nconst submenus = [\n[\n\t{\n\ttitle: \"Cadastrar pacientes\",\n\ttarget: \"cadastrar-pacientes\"\n\t},\n\t{\n\ttitle: \"Gerenciar pacientes\",\n\ttarget: \"pacientes\",\t\t\t\t\n\t}\n],\n[\n\t{\n\ttitle: \"Novo\",\n\ttarget: \"cadastrar-atendimento\",\t\t\t\t\t\n\t},\n\t{\n\ttitle: \"Agendamentos\",\n\ttarget: \"agendamentos\",\t\t\t\t\n\t},\n\t{\n\ttitle: \"Material de Apoio\",\n\ttarget: \"material-apoio\",\t\t\t\t\n\t}\n]\n]\n\t\n\nexport default SideBar","import React, { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { Navbar, Button, NavbarToggler, Collapse, Nav, NavItem, NavLink } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst NavBar = props => {\n\n  const [isOpen, setOpen] = useState(true)\n  const toggle = () => setOpen(!isOpen)\n\n  useEffect(() => {\n    //console.log(props)\n  })\n  \n  return (\n    <Navbar color=\"light\" light className=\"navbar shadow-sm p-3 mb-5 bg-white rounded\" expand=\"md\">\n      <Button color=\"info\" onClick={props.toggle}>\n        <FontAwesomeIcon icon={faBars}/>\n      </Button>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"m-auto\" navbar>\n          <NavItem>\n            <div className=\"page-title\">\n              <h1 className=\"title\">\n                {props.pageTitle}\n              </h1>\n            </div>\n            {/* <NavLink tag={Link} to={'/page-1'}>Usuário</NavLink> */}\n          </NavItem>\n      </Nav>\n      </Collapse>\n    </Navbar>\n  )\n}\n\nconst mapStateToProps = store => {\n  return{\n    pageTitle: store.pageReducer.pageTitle\n  }\n}\n\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport auth from './auth'\n\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\n    return(\n        <Route {...rest} render={\n            (props) => {\n                if(auth.isAuthenticated()){\n                    return <Component {...props} />\n                }else{\n                    return <Redirect to={\n                        {\n                            pathname: \"/login\",\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n            }\n        }/>\n    )\n}","export const setPageTitle = title => ({\n    type: 'SET_PAGE_TITLE',\n    payload: title\n})","import api from './api'\n\nconst fetchAll = () => api.get('/patients')\nconst store = body => api.post('/patients')\nconst deletePatient = id => api.delete(`/patients/${id}`)\n\nexport default {\n    fetchAll,\n    deletePatient,\n    store\n}","import React, { useEffect, useState } from 'react'\nimport './style.scss'\nimport { Row, Col, Button } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport { cpfMask, currencyMask } from '../Mask/index'\nimport patientsService from \"../../services/patientsService\"\nimport Swal from \"sweetalert2\"\n\nconst StorePatients = props => {\n\n    const [cpf, setCpf] = useState(\"\")\n    const [currency, setCurrency] = useState(\"\")\n    const [dateColor, setDateColor] = useState(\"form-control input nascimento\")\n    const [body, setBody] = useState({})\n\n    useEffect(() => {\n        props.setPageTitle(\"Cadastrar Paciente\")\n    })\n\n    const handleCpf = e => {\n        setCpf(cpfMask(e.target.value))\n        \n        let value = e.target.value\n        let name = e.target.name\n\n        setBody({\n            ...body,\n            [name]: value\n        })\n    }\n\n    const handleCurrency = e => {\n        setCurrency(currencyMask(e.target.value))\n    }\n\n    const handleDateChage = () => {\n        setDateColor(\"form-control input\")\n    }\n\n    const handleChangeBody = e => {\n        let value = e.target.value\n        let name = e.target.name\n\n        setBody({\n            ...body,\n            [name]: value\n        })\n    }\n\n    const handleChangeUser = e => {\n        let value = e.target.value\n        let name = e.target.name\n\n        setBody({\n            ...body,\n            user: {\n                ...body.user,\n                [name]: value\n            }\n        })\n    }\n\n    const handleChangeAddress = e => {\n        let value = e.target.value\n        let name = e.target.name\n\n        setBody({\n            ...body,\n            address: {\n                ...body.address,\n                [name]: value\n            }\n        })\n    }\n\n    const handleFormSubmit = e => {\n        e.preventDefault()\n        console.log(body)\n        patientsService.store(body)\n        .then(res => {\n            console.log(res)\n            Swal.fire({\n                title: \"Paciente cadastrado com sucesso!\",\n                icon: \"success\",\n                confirmButtonColor: \"#1492A5\"\n            })\n        })\n        .catch(err => {\n            console.log(err)\n            Swal.fire({\n                title: \"Ocorreu um erro.\",\n                text: \"Por favor tente novamente mais tarde\",\n                icon: \"warning\",\n                confirmButtonColor: \"#1492A5\"\n            })\n        })\n    }\n\n    return(\n        <form onSubmit={handleFormSubmit}>\n        <Row>\n            <Col md={{size: 6}}>\n                <div className=\"box\">\n                    <h1 className=\"subtitle\">\n                        Dados do paciente\n                    </h1>\n                    <Row>\n                        <Col md={8}>\n                            <label htmlFor=\"name\">Nome: </label>\n                            <input onChange={handleChangeBody} type=\"text\" name=\"name\" placeholder=\"Nome completo\" className=\"form-control input\" />\n                        </Col>\n                        <Col md={4}>\n                            <label htmlFor=\"landline\">Telefone Fixo: </label>                                    \n                            <input onChange={handleChangeBody} type=\"text\" name=\"landline\" className=\"form-control input\" placeholder=\"DDD + número\"/>\n                        </Col>\n                    </Row>\n                    <Row style={{marginTop: '32px'}}>\n                        <Col md={4}>\n                            <label htmlFor=\"phone\">Celular: </label>\n                            <input onChange={handleChangeBody} type=\"text\" name=\"phone\" className=\"form-control input\" placeholder=\"DDD + número\"/>\n                        </Col>\n                        <Col md={4}>\n                            <label htmlFor=\"cpf\">CPF: </label>\n                            <input \n                                type=\"text\" \n                                name=\"cpf\" \n                                className=\"form-control input\"\n                                onChange={handleCpf} \n                                maxLength=\"14\" \n                                placeholder=\"___.___.___-__\" \n                                value={cpf}\n                            />\n                        </Col>\n                        <Col md={4}>\n                            <label htmlFor=\"rg\">RG: </label>\n                            <input onChange={handleChangeBody} type=\"text\" name=\"rg\" className=\"form-control input\"/>\n                        </Col>\n                    </Row>\n                    <Row style={{marginTop: '32px', marginBottom: '32px'}}>\n                        <Col md={6}>\n                            <label htmlFor=\"birthday\">Data de Nascimento: </label>\n                            <input \n                                type=\"date\" \n                                name=\"birthday\" \n                                className={dateColor}\n                                placeholder=\"Data de Nascimento\" \n                                onChange={handleDateChage}\n                                onKeyDown={handleDateChage}\n                            />\n                        </Col>\n                        <Col md={6}>\n                            Gênero\n                            <div className=\"genders\">\n                                <label>\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"genders\" defaultChecked />\n                                    Masculino\n                                </label>\n                                <br />\n                                <label>\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"genders\" />\n                                    Feminino\n                                </label>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </Col>\n            <Col md={{size: 6}}>\n                <div className=\"box\">\n                    <h1 className=\"subtitle\">\n                        Endereço\n                    </h1>\n                    <Row>\n                        <Col md={6}>\n                            <label htmlFor=\"street\">Logradouro: </label>\n                            <input onChange={handleChangeAddress} type=\"text\" name=\"street\" className=\"form-control input\" placeholder=\"Rua, AV, etc...\" />\n                        </Col>\n                        <Col md={6}>\n                            <label htmlFor=\"numero\">Número: </label>\n                            <input onChange={handleChangeAddress} type=\"number\" name=\"number\" className=\"form-control input\" />\n                        </Col>\n                    </Row>\n                    <Row style={{marginTop: '32px', marginBottom: '32px'}}>\n                        <Col md={6}>\n                            <label htmlFor=\"neighborhood\">Bairro: </label>                                    \n                            <input onChange={handleChangeAddress} type=\"text\" name=\"neighborhood\" className=\"form-control input\"/>\n                        </Col>\n                        <Col md={6}>\n                            <label htmlFor=\"cep\">CEP: </label>\n                            <input onChange={handleChangeAddress} type=\"text\" name=\"cep\" className=\"form-control input\" />\n                        </Col>\n                    </Row>\n                    <Row style={{marginBottom: '32px'}}>\n                        <Col md={6}>\n                            <label htmlFor=\"city_id\">Municipio: </label>\n                            <select onChange={handleChangeAddress} name=\"city_id\" className=\"form-control input\">\n                                <option value=\"1\">Novo Hamburgo</option>\n                                <option value=\"2\">São Leopoldo</option>\n                                <option value=\"3\">Sapucaia</option>\n                                <option value=\"4\">Esteio</option>\n                                <option value=\"5\">Canoas</option>\n                                <option value=\"6\">Porto Alegre</option>\n                            </select>\n                        </Col>\n                        <Col md={6}>\n                            <label htmlFor=\"state\">UF: </label>                                    \n                            <select name=\"state\" className=\"form-control input\">\n                                <option value=\"ACRE\">ACRE</option>\n                                <option value=\"ALAGOAS\">ALAGOAS</option>\n                                <option value=\"AMAPÁ\">AMAPÁ</option>\n                                <option value=\"AMAZONAS\">AMAZONAS</option>\n                                <option value=\"BAHIA\">BAHIA</option>\n                                <option value=\"CEARÁ\">CEARÁ</option>\n                                <option value=\"DISTRITO FEDERAL\">DISTRITO FEDERAL</option>\n                                <option value=\"ESPÍRITO SANTO\">ESPÍRITO SANTO</option>\n                                <option value=\"GOIÁS\">GOIÁS</option>\n                                <option value=\"MARANHÃO\">MARANHÃO</option>\n                                <option value=\"MATO GROSSO\">MATO GROSSO</option>\n                                <option value=\"MATO GROSSO DO SUL\">MATO GROSSO DO SUL</option>\n                                <option value=\"MINAS GERAIS\">MINAS GERAIS</option>\n                                <option value=\"PARÁ\">PARÁ</option>\n                                <option value=\"PARAÍBA\">PARAÍBA</option>\n                                <option value=\"PARANÁ\">PARANÁ</option>\n                                <option value=\"PERNAMBUCO\">PERNAMBUCO</option>\n                                <option value=\"PIAUÍ\">PIAUÍ</option>\n                                <option value=\"RIO DE JANEIRO\">RIO DE JANEIRO</option>\n                                <option value=\"RIO GRANDE DO NORTE\">RIO GRANDE DO NORTE</option>\n                                <option value=\"RIO GRANDE DO SUL\">RIO GRANDE DO SUL</option>\n                                <option value=\"RONDÔNIA\">RONDÔNIA</option>\n                                <option value=\"RORAIMA\">RORAIMA</option>\n                                <option value=\"SANTA CATARINA\">SANTA CATARINA</option>\n                                <option value=\"SÃO PAULO\">SÃO PAULO</option>\n                                <option value=\"SERGIPE\">SERGIPE</option>\n                                <option value=\"TOCANTINS\">TOCANTINS</option>\n                            </select>\n                        </Col>\n                    </Row>\n                </div>\n            </Col>\n        </Row>\n        <Row style={{marginTop: '32px', marginBottom: '32px'}}>\n            <Col md={12}>\n                <div className=\"box\">\n                    <h1 className=\"subtitle\">\n                        Informações adicionais\n                    </h1>\n                    <Row>\n                        <Col md={6}>\n                            <label htmlFor=\"emergency_contact\">Contato de Emergência: </label>                                    \n                            <input onChange={handleChangeBody} type=\"text\" name=\"emergency_contact\" className=\"form-control input\" placeholder=\"DDD + número\" />\n                        </Col>\n                        <Col md={6}>\n                            <label htmlFor=\"emergency_name\">Nome: </label>\n                            <input onChange={handleChangeBody} type=\"text\" name=\"emergency_name\" className=\"form-control input\" placeholder=\"Nome completo\" />                               \n                        </Col>\n                    </Row>\n                    <Row style={{marginTop: '32px', marginBottom: '32px'}}>\n                        <Col md={12}>\n                            <label htmlFor=\"observation\">Observação: </label>                                    \n                            <textarea onChange={handleChangeBody} className=\"form-control input\" name=\"observation\"></textarea>\n                        </Col>\n                    </Row>\n                </div>\n            </Col>\n        </Row>\n        <Row style={{marginTop: '32px', marginBottom: '32px'}}>\n            <Col md={12}>\n                <div className=\"box\">\n                    <h1 className=\"subtitle\">\n                        Valor da Sessão\n                    </h1>\n                    <Row style={{marginBottom: '32px'}}>\n                        <Col md={6}>\n                            <label htmlFor=\"value\">Valor: </label>                                    \n                            <input onChange={handleChangeUser} type=\"text\" value={currency} onChange={handleCurrency} className=\"form-control input\" name=\"value\" />\n                        </Col>\n                        <Col md={6}>\n                            Deseja recibo?\n                            <div className=\"receipt\">\n                                <label>\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"receipt\" defaultChecked />\n                                    Sim\n                                </label>\n                                <br />\n                                <label>\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"receipt\" />\n                                    Não\n                                </label>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </Col>\n        </Row>\n        <Row style={{marginTop: '32px', marginBottom: '32px'}}>\n            <Col md={12}>\n                <div className=\"box\">\n                    <h1 className=\"subtitle\">\n                        Dados de Acesso ao Sistema\n                    </h1>\n                    <Row>\n                        <Col md={4}>\n                            <label htmlFor=\"login\">Usuário: </label>                                    \n                            <input onChange={handleChangeUser} type=\"text\" className=\"form-control input\" name=\"login\" />\n                        </Col>\n                        <Col md={4}>\n                            <label htmlFor=\"password\">Senha: </label>                                    \n                            <input onChange={handleChangeUser} type=\"password\" className=\"form-control input\" name=\"password\" />\n                        </Col>\n                        <Col md={4}>\n                            <label htmlFor=\"password_confirmation\">Repetir Senha: </label>                                    \n                            <input onChange={handleChangeUser} type=\"password\" className=\"form-control input\" name=\"password_confirmation\" />\n                        </Col>\n                    </Row>\n                    <Row style={{marginTop: '32px', marginBottom: '32px'}}>\n                        <Col md={4}>\n                            <label htmlFor=\"role\">Hierarquia: </label>                                    \n                            <select className=\"form-control input\" name=\"role\">\n                                <option>Teste 1</option>\n                                <option>Teste 2</option>\n                                <option>Teste 3</option>\n                            </select>\n                        </Col>\n                        <Col md={4}>\n                            Cadastro ativo?\n                            <div className=\"active\">\n                                <label>\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"active\" defaultChecked />\n                                    Sim\n                                </label>\n                                <br />\n                                <label>\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"active\" />\n                                    Não\n                                </label>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </Col>\n        </Row>\n        <Row style={{marginBottom: '100px'}}>\n            <Col md={12}>\n                <div className=\"box\">\n                    <h1 className=\"subtitle\">Salvar dados</h1>\n                    <Button type=\"submit\">Salvar</Button>\n                </div>\n            </Col>\n        </Row>\n        </form>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n   setPageTitle: title => dispatch(actions.setPageTitle(title))\n})\n\nexport default connect(null, mapDispatchToProps)(StorePatients)","export const cpfMask = value => {\n    return value\n        .replace(/\\D/g, '') \n        .replace(/(\\d{3})(\\d)/, '$1.$2') \n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n        .replace(/(-\\d{2})\\d+?$/, '$1') \n}\n\nexport const currencyMask = value => {\n\n    //fazer mascara de dinheiro\n    return value\n}","import React, { useEffect, useState, Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from \"../../store/actions\"\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Row, Col } from 'reactstrap'\nimport \"./style.scss\"\nimport patientsService from \"../../services/patientsService\"\nimport Swal from \"sweetalert2\"\n\nclass Patients extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            patients: []\n        }\n    }\n\n    initialState = []\n\n    componentDidMount(){\n        this.props.setPageTitle(\"Gerenciar pacientes\")\n\n        this.fetchPatients()\n    }\n\n    fetchPatients = () => {\n        patientsService.fetchAll()\n        .then(response => {\n            this.setState({\n                patients: response.data.data\n            })\n            this.initialState = response.data.data\n        })\n    }\n\n    handleInput = e => {\n        const filteredPatients = this.initialState.filter(patient => {\n            let name = patient.name.toLocaleLowerCase()\n            let search = e.target.value.toLocaleLowerCase()\n            return name.includes(search)\n        })\n\n        this.setState({\n            patients: filteredPatients\n        })\n    }\n\n    deletePatient = id => {\n        Swal.fire({\n            title: 'Tem certeza que deseja excluir este paciente?',\n            text: 'Todos os registros vinculados ao paciente serão completamente excluídos!',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Excluir',\n            confirmButtonColor: 'red',\n            cancelButtonText: 'Cancelar',\n            cancelButtonColor: '#1492A5'\n        })\n        .then(res => {\n            if(res.value){\n                patientsService.deletePatient(id)\n                .then(res => {\n                    if(res.status === 200)\n                        this.fetchPatients()\n                        Swal.fire(\"Excluído com sucesso!\")\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n            }\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"box\">\n                <Row>\n                    <Col md={12}>\n                        <label htmlFor=\"search\">Pesquisar:</label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control input\" \n                            placeholder=\"Digite aqui o nome do paciente...\" \n                            onChange={this.handleInput} \n                        />\n                    </Col>\n                </Row>\n                <table className=\"table table-striped table-sm table-responsive\">\n                    <thead>\n                        <tr>\n                            <th>Name:</th>\n                            <th>RG:</th>\n                            <th>Celular:</th>\n                            <th>Editar:</th>\n                            <th>Deletar:</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.patients.map((patient, index) => (\n                            <tr key={index}>\n                                <td>{patient.name}</td>\n                                <td>{patient.rg}</td>\n                                <td>{patient.phone}</td>\n                                <td>\n                                    <button onClick={() => Swal.fire('Em construção')} className=\"btn edit-button\">\n                                        <FontAwesomeIcon icon={faEdit} />\n                                    </button>\n                                </td>\n                                <td>\n                                    <button \n                                        id={patient.id} \n                                        onClick={ () => this.deletePatient(patient.id) } \n                                        className=\"btn delete-button\"\n                                    >\n                                        <FontAwesomeIcon icon={faTrash} />\n                                    </button>\n                                </td>\n                            </tr>\n                        ))\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    \n}\n\nconst mapDispatchToProps = dispatch => ({\n    setPageTitle: title => dispatch(actions.setPageTitle(title)),\n    filterPatients: patient => dispatch(actions.filterPatients(patient))\n})\n\nconst mapStateToProps = store => {\n    return{\n        patients: store.patientsReducer.patients\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Patients)","export const filterPatients = patient => ({\n    type: \"FILTER_PATIENTS\",\n    payload: patient\n})","import React from 'react'\nimport classNames from 'classnames'\nimport { Container } from 'reactstrap'\nimport NavBar from './Navbar'\nimport { Switch } from 'react-router-dom'\nimport { ProtectedRoute } from '../../protected.route'\n\nimport StorePatients from '../Patients/storePatient'\nimport Patients from '../Patients/patients'\n\nexport default props => (\n    <Container fluid className={classNames('content', {'is-open': props.isOpen})}>\n\t\t<NavBar toggle={props.toggle}/>\n\t\t<Switch>\n\t\t\t<ProtectedRoute exact path=\"/\" component={() => \"Em construção...\" } />\n\t\t\t<ProtectedRoute exact path=\"/cadastrar-pacientes\" component={StorePatients} />\n\t\t\t<ProtectedRoute exact path=\"/pacientes\" component={Patients} />          \n\t\t</Switch>\n    </Container>\n)","import React, { useState } from 'react'\nimport auth from '../../auth'\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHospitalAlt } from '@fortawesome/free-solid-svg-icons'\nimport './style.scss'\n\nconst Login = props => {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [incorrectMessage, setIncorrectMessage] = useState(false)\n\n    const handleLogin = e => {\n        e.preventDefault()\n        \n        let data = {email: email, password: password}\n\n        auth.login(data, () => props.history.push(\"/\"), () => setIncorrectMessage(true))\n    }\n\n    return(\n        <Container>\n            <Row>\n                <Col className=\"form-background\" md={{size: 6, offset: 3}}>\n                    <form onSubmit={handleLogin}>\n                        <h2><FontAwesomeIcon icon={faHospitalAlt} /> Acessar</h2>\n                        <input onChange={e => setEmail(e.target.value)} type=\"email\" className=\"form-control\" name=\"user\" required />\n                        <input onChange={e => setPassword(e.target.value)} type=\"password\" className=\"form-control\" name=\"password\" required />\n                        { incorrectMessage ? <p>Usuário ou senha incorretos</p> : \"\" }\n                        <Button className=\"login-button\">Acessar</Button>\n                    </form>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Login","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport SideBar from './components/SideBar'\nimport Content from './components/Content'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.scss'\nimport Login from './components/Login'\n\nexport default () => {\n\n  const [isOpen, setOpen] = useState(true)\n  const toggle = () => setOpen(!isOpen)\n\n  return (\n    <Router>\n\t\t<Switch>\n\t\t<Route exact path=\"/login\" component={Login} />\n\t\t<div className=\"App wrapper\">\n\t\t\t<SideBar toggle={toggle} isOpen={isOpen} />\n\t\t\t<Content toggle={toggle} isOpen={isOpen} />\n\t\t</div>\n\t\t</Switch>\n    </Router>\n  )\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","const initState = {\n    pageTitle: \"Gerenciador de consultas\"\n}\n\nconst pageReducer = (state = initState, action) => {\n    switch (action.type){\n        case \"SET_PAGE_TITLE\":\n            return {\n              pageTitle: action.payload  \n            }\n\n        default:\n            return state\n    }\n}\n\nexport default pageReducer","const patientsReducer = (state = {}, action) => {\n\n    switch(action.type){\n\n        case \"FILTER_PATIENTS\":\n            let filteredPatients = state.patients.filter(patient => {\n                let name = patient.name.toLocaleLowerCase()\n                return name.includes(action.payload.toLocaleLowerCase())\n            })\n            return {\n                patients: filteredPatients\n            }\n            \n        default: return state\n    }\n\n}\n\nexport default patientsReducer","import { combineReducers } from 'redux'\nimport pageReducer from './pageReducer'\nimport patientsReducer from './patientsReducer'\n\nexport default combineReducers ({\n    pageReducer,\n    patientsReducer\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/index'\nimport thunk from \"redux-thunk\"\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}