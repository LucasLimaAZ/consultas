{"version":3,"sources":["components/SideBar/SubMenu.js","services/api.js","auth.js","components/SideBar/index.js","components/Content/Navbar.js","protected.route.js","store/actions/page.js","components/Patients/storePatient.js","components/Mask/index.js","services/patientsService.js","components/Patients/patients.js","store/actions/patients.js","components/Content/index.js","components/Login/index.js","App.js","serviceWorker.js","store/reducers/pageReducer.js","store/reducers/patientsReducer.js","store/reducers/index.js","index.js"],"names":["SubMenu","props","useState","collapsed","setCollapsed","icon","title","items","NavItem","onClick","className","classNames","NavLink","Collapse","isOpen","navbar","map","item","index","key","tag","Link","to","target","api","axios","create","baseURL","interceptors","request","use","headers","localStorage","getItem","error","this","authenticated","data","callBack","elseCallBack","post","then","response","status","setItem","access_token","catch","err","console","log","submenus","SideBar","color","toggle","style","faHospitalAlt","Nav","cursor","vertical","faUsers","faUserMd","auth","logout","window","location","reload","faPowerOff","connect","store","pageTitle","pageReducer","setOpen","useEffect","Navbar","light","expand","Button","faBars","NavbarToggler","ProtectedRoute","Component","component","rest","render","isAuthenticated","pathname","state","from","setPageTitle","type","payload","dispatch","actions","cpf","setCpf","currency","setCurrency","dateColor","setDateColor","handleDateChage","Row","Col","md","size","htmlFor","id","placeholder","marginTop","onChange","e","value","replace","maxLength","marginBottom","onKeyDown","name","defaultChecked","get","delete","Patients","initialState","fetchPatients","patientsService","setState","patients","handleInput","filteredPatients","filter","patient","toLocaleLowerCase","search","includes","deletePatient","Swal","fire","text","showCancelButton","confirmButtonText","cancelButtonText","res","rg","phone","faEdit","faTrash","patientsReducer","filterPatients","Container","fluid","exact","path","StorePatients","Login","email","setEmail","password","setPassword","incorrectMessage","setIncorrectMessage","offset","onSubmit","preventDefault","login","history","push","required","Content","Boolean","hostname","match","initState","action","combineReducers","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1b1850c3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport  { Collapse, NavItem, NavLink } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SubMenu = props => {\r\n  \r\n  const [collapsed, setCollapsed] = useState(true)\r\n  const toggleNavbar = () => setCollapsed(!collapsed)\r\n  const { icon, title, items } = props;\r\n \r\n  return (\r\n    <div>\r\n      <NavItem onClick={toggleNavbar} className={classNames({'menu-open': !collapsed})}>\r\n        <NavLink className=\"dropdown-toggle\">\r\n          <FontAwesomeIcon icon={icon} className=\"mr-2\"/>{title}\r\n        </NavLink>\r\n      </NavItem>\r\n      <Collapse isOpen={!collapsed} navbar className={classNames('items-menu',{'mb-1': !collapsed})}>\r\n        {items.map((item, index) => (\r\n            <NavItem key={index} className=\"pl-4\">\r\n              <NavLink tag={Link} to={item.target}>\r\n                {item.title}\r\n              </NavLink>\r\n            </NavItem>\r\n            ))}\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;","import axios from 'axios'\r\n\r\nconst api = axios.create({ \r\n    baseURL: 'http://127.0.0.1:8000/api' \r\n\r\n})\r\n\r\napi.interceptors.request.use(\r\n    request => {\r\n        request.headers = {\r\n            'Authorization': \"Bearer \" + localStorage.getItem('access_token'),\r\n        }\r\n      return request\r\n    },\r\n    error => error\r\n)\r\n\r\nexport default api\r\n","import api from './services/api'\r\n\r\nclass Auth{\r\n    constructor(props){\r\n        this.authenticated = false\r\n    }\r\n\r\n    login(data, callBack, elseCallBack){\r\n\r\n        api.post('/auth/login', data)\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    localStorage.setItem(\"access_token\", response.data.access_token)\r\n                    this.authenticated = true\r\n                    \r\n                    callBack()\r\n                }\r\n                else{\r\n                    this.authenticated = false\r\n                    elseCallBack()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.authenticated = false\r\n                elseCallBack()\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    logout(callBack){\r\n        this.authenticated = false\r\n        callBack()\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticated\r\n    }\r\n}\r\n\r\nexport default new Auth()","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPowerOff, faHospitalAlt, faUserMd, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport SubMenu from './SubMenu'\r\nimport { NavItem, NavLink, Nav } from 'reactstrap'\r\nimport classNames from 'classnames'\r\nimport auth from '../../auth'\r\nimport \"./style.scss\"\r\n\r\nconst SideBar = props => (\r\n\t<div className={classNames('sidebar', {'is-open': props.isOpen})}>\r\n\t\t<div className=\"sidebar-header\">\r\n\t\t<span color=\"info\" onClick={props.toggle} style={{color: '#fff'}}>&times</span>\r\n\t\t<h3 className=\"sidebar-title\"><FontAwesomeIcon icon={faHospitalAlt} /> Consultas</h3>\r\n\t\t</div>\r\n\t\t<div className=\"side-menu\">\r\n\t\t<Nav style={{cursor: 'pointer'}} vertical className=\"list-unstyled pb-3\">\r\n\t\t\t<p>Bem vindo Usuário</p>\r\n\t\t\t<SubMenu title=\"Pacientes\" icon={faUsers} items={submenus[0]}/>\r\n\t\t\t<SubMenu title=\"Agendamento\" icon={faUserMd} items={submenus[1]}/>\r\n\t\t\t<NavItem>\r\n\t\t\t<NavLink onClick={() => auth.logout(() => window.location.reload(false))}>\r\n\t\t\t\t<FontAwesomeIcon icon={faPowerOff} className=\"mr-2\"/>Sair\r\n\t\t\t</NavLink>\r\n\t\t\t</NavItem>\r\n\t\t</Nav>\t\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nconst submenus = [\r\n[\r\n\t{\r\n\ttitle: \"Cadastrar pacientes\",\r\n\ttarget: \"cadastrar-pacientes\"\r\n\t},\r\n\t{\r\n\ttitle: \"Gerenciar pacientes\",\r\n\ttarget: \"pacientes\",\t\t\t\t\r\n\t}\r\n],\r\n[\r\n\t{\r\n\ttitle: \"Novo\",\r\n\ttarget: \"cadastrar-atendimento\",\t\t\t\t\t\r\n\t},\r\n\t{\r\n\ttitle: \"Agendamentos\",\r\n\ttarget: \"agendamentos\",\t\t\t\t\r\n\t},\r\n\t{\r\n\ttitle: \"Material de Apoio\",\r\n\ttarget: \"material-apoio\",\t\t\t\t\r\n\t}\r\n]\r\n]\r\n\t\r\n\r\nexport default SideBar","import React, { useState, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { Navbar, Button, NavbarToggler, Collapse, Nav, NavItem, NavLink } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NavBar = props => {\r\n\r\n  const [isOpen, setOpen] = useState(true)\r\n  const toggle = () => setOpen(!isOpen)\r\n\r\n  useEffect(() => {\r\n    //console.log(props)\r\n  })\r\n  \r\n  return (\r\n    <Navbar color=\"light\" light className=\"navbar shadow-sm p-3 mb-5 bg-white rounded\" expand=\"md\">\r\n      <Button color=\"info\" onClick={props.toggle}>\r\n        <FontAwesomeIcon icon={faBars}/>\r\n      </Button>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"m-auto\" navbar>\r\n          <NavItem>\r\n            <div className=\"page-title\">\r\n              <h1 className=\"title\">\r\n                {props.pageTitle}\r\n              </h1>\r\n            </div>\r\n            {/* <NavLink tag={Link} to={'/page-1'}>Usuário</NavLink> */}\r\n          </NavItem>\r\n      </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return{\r\n    pageTitle: store.pageReducer.pageTitle\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport auth from './auth'\r\n\r\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\r\n    return(\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if(auth.isAuthenticated()){\r\n                    return <Component {...props} />\r\n                }else{\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n                }\r\n            }\r\n        }/>\r\n    )\r\n}","export const setPageTitle = title => ({\r\n    type: 'SET_PAGE_TITLE',\r\n    payload: title\r\n})","import React, { useEffect, useState } from 'react'\r\nimport './style.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { Row, Col, Button } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions'\r\nimport { cpfMask, currencyMask } from '../Mask/index'\r\n\r\nconst StorePatients = props => {\r\n\r\n    const [cpf, setCpf] = useState(\"\")\r\n    const [currency, setCurrency] = useState(\"\")\r\n    const [dateColor, setDateColor] = useState(\"form-control input nascimento\")\r\n\r\n    useEffect(() => {\r\n        props.setPageTitle(\"Cadastrar Paciente\")\r\n    })\r\n\r\n    const handleCpf = e => {\r\n        setCpf(cpfMask(e.target.value))\r\n    }\r\n\r\n    const handleCurrency = e => {\r\n        setCurrency(currencyMask(e.target.value))\r\n    }\r\n\r\n    const handleDateChage = () => {\r\n        setDateColor(\"form-control input\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Row>\r\n            <Col md={{size: 6}}>\r\n                <div className=\"box\">\r\n                    <h1 className=\"subtitle\">\r\n                        Dados do paciente\r\n                    </h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <label htmlFor=\"name\">Nome: </label>\r\n                            <input type=\"text\" id=\"name\" placeholder=\"Nome completo\" className=\"form-control input\" />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <label htmlFor=\"landline\">Telefone Fixo: </label>                                    \r\n                            <input type=\"text\" id=\"landline\" className=\"form-control input\" placeholder=\"DDD + número\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: '32px'}}>\r\n                        <Col md={4}>\r\n                            <label htmlFor=\"phone\">Celular: </label>\r\n                            <input type=\"text\" id=\"phone\" className=\"form-control input\" placeholder=\"DDD + número\"/>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <label htmlFor=\"cpf\">CPF: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"cpf\" \r\n                                className=\"form-control input\"\r\n                                onChange={handleCpf} \r\n                                maxLength=\"14\" \r\n                                placeholder=\"___.___.___-__\" \r\n                                value={cpf}\r\n                            />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <label htmlFor=\"rg\">RG: </label>\r\n                            <input type=\"text\" id=\"rg\" className=\"form-control input\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: '32px', marginBottom: '32px'}}>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"birthday\">Data de Nascimento: </label>\r\n                            <input \r\n                                type=\"date\" \r\n                                id=\"birthday\" \r\n                                className={dateColor}\r\n                                placeholder=\"Data de Nascimento\" \r\n                                onChange={handleDateChage}\r\n                                onKeyDown={handleDateChage}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            Gênero\r\n                            <div className=\"genders\">\r\n                                <label>\r\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"genders\" defaultChecked />\r\n                                    Masculino\r\n                                </label>\r\n                                <br />\r\n                                <label>\r\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"genders\" />\r\n                                    Feminino\r\n                                </label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n            <Col md={{size: 6}}>\r\n                <div className=\"box\">\r\n                    <h1 className=\"subtitle\">\r\n                        Endereço\r\n                    </h1>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"street\">Logradouro: </label>\r\n                            <input type=\"text\" id=\"street\" className=\"form-control input\" placeholder=\"Rua, AV, etc...\" />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"numero\">Número: </label>\r\n                            <input type=\"number\" id=\"numero\" className=\"form-control input\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: '32px', marginBottom: '32px'}}>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"neighborhood\">Bairro: </label>                                    \r\n                            <input type=\"text\" id=\"neighborhood\" className=\"form-control input\"/>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"cep\">CEP: </label>\r\n                            <input type=\"text\" id=\"cep\" className=\"form-control input\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginBottom: '32px'}}>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"city_id\">Municipio: </label>\r\n                            <select className=\"form-control input\">\r\n                                <option value=\"1\">Novo Hamburgo</option>\r\n                                <option value=\"2\">São Leopoldo</option>\r\n                                <option value=\"3\">Sapucaia</option>\r\n                                <option value=\"4\">Esteio</option>\r\n                                <option value=\"5\">Canoas</option>\r\n                                <option value=\"6\">Porto Alegre</option>\r\n                            </select>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"state\">UF: </label>                                    \r\n                            <select id=\"state\" className=\"form-control input\">\r\n                                <option value=\"ACRE\">ACRE</option>\r\n                                <option value=\"ALAGOAS\">ALAGOAS</option>\r\n                                <option value=\"AMAPÁ\">AMAPÁ</option>\r\n                                <option value=\"AMAZONAS\">AMAZONAS</option>\r\n                                <option value=\"BAHIA\">BAHIA</option>\r\n                                <option value=\"CEARÁ\">CEARÁ</option>\r\n                                <option value=\"DISTRITO FEDERAL\">DISTRITO FEDERAL</option>\r\n                                <option value=\"ESPÍRITO SANTO\">ESPÍRITO SANTO</option>\r\n                                <option value=\"GOIÁS\">GOIÁS</option>\r\n                                <option value=\"MARANHÃO\">MARANHÃO</option>\r\n                                <option value=\"MATO GROSSO\">MATO GROSSO</option>\r\n                                <option value=\"MATO GROSSO DO SUL\">MATO GROSSO DO SUL</option>\r\n                                <option value=\"MINAS GERAIS\">MINAS GERAIS</option>\r\n                                <option value=\"PARÁ\">PARÁ</option>\r\n                                <option value=\"PARAÍBA\">PARAÍBA</option>\r\n                                <option value=\"PARANÁ\">PARANÁ</option>\r\n                                <option value=\"PERNAMBUCO\">PERNAMBUCO</option>\r\n                                <option value=\"PIAUÍ\">PIAUÍ</option>\r\n                                <option value=\"RIO DE JANEIRO\">RIO DE JANEIRO</option>\r\n                                <option value=\"RIO GRANDE DO NORTE\">RIO GRANDE DO NORTE</option>\r\n                                <option value=\"RIO GRANDE DO SUL\">RIO GRANDE DO SUL</option>\r\n                                <option value=\"RONDÔNIA\">RONDÔNIA</option>\r\n                                <option value=\"RORAIMA\">RORAIMA</option>\r\n                                <option value=\"SANTA CATARINA\">SANTA CATARINA</option>\r\n                                <option value=\"SÃO PAULO\">SÃO PAULO</option>\r\n                                <option value=\"SERGIPE\">SERGIPE</option>\r\n                                <option value=\"TOCANTINS\">TOCANTINS</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginTop: '32px', marginBottom: '32px'}}>\r\n            <Col md={12}>\r\n                <div className=\"box\">\r\n                    <h1 className=\"subtitle\">\r\n                        Informações adicionais\r\n                    </h1>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"emergency_contact\">Contato de Emergência: </label>                                    \r\n                            <input type=\"text\" id=\"emergency_contact\" className=\"form-control input\" placeholder=\"DDD + número\" />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"emergency_name\">Nome: </label>\r\n                            <input type=\"text\" id=\"emergency_name\" className=\"form-control input\" placeholder=\"Nome completo\" />                               \r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: '32px', marginBottom: '32px'}}>\r\n                        <Col md={12}>\r\n                            <label htmlFor=\"observation\">Observação: </label>                                    \r\n                            <textarea className=\"form-control input\" id=\"observation\"></textarea>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginTop: '32px', marginBottom: '32px'}}>\r\n            <Col md={12}>\r\n                <div className=\"box\">\r\n                    <h1 className=\"subtitle\">\r\n                        Valor da Sessão\r\n                    </h1>\r\n                    <Row style={{marginBottom: '32px'}}>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"value\">Valor: </label>                                    \r\n                            <input type=\"text\" value={currency} onChange={handleCurrency} className=\"form-control input\" id=\"value\" />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            Deseja recibo?\r\n                            <div className=\"receipt\">\r\n                                <label>\r\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"receipt\" defaultChecked />\r\n                                    Sim\r\n                                </label>\r\n                                <br />\r\n                                <label>\r\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"receipt\" />\r\n                                    Não\r\n                                </label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginTop: '32px', marginBottom: '32px'}}>\r\n            <Col md={12}>\r\n                <div className=\"box\">\r\n                    <h1 className=\"subtitle\">\r\n                        Dados de Acesso ao Sistema\r\n                    </h1>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"login\">Usuário: </label>                                    \r\n                            <input type=\"text\" className=\"form-control input\" id=\"login\" />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"password\">Senha: </label>                                    \r\n                            <input type=\"password\" className=\"form-control input\" id=\"password\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: '32px', marginBottom: '32px'}}>\r\n                        <Col md={6}>\r\n                            <label htmlFor=\"role\">Hierarquia: </label>                                    \r\n                            <select className=\"form-control input\" id=\"role\">\r\n                                <option>Teste 1</option>\r\n                                <option>Teste 2</option>\r\n                                <option>Teste 3</option>\r\n                            </select>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            Cadastro ativo?\r\n                            <div className=\"active\">\r\n                                <label>\r\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"active\" defaultChecked />\r\n                                    Sim\r\n                                </label>\r\n                                <br />\r\n                                <label>\r\n                                    <input type=\"radio\" className=\"option-input radio\" name=\"active\" />\r\n                                    Não\r\n                                </label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginBottom: '100px'}}>\r\n            <Col md={12}>\r\n                <div className=\"box\">\r\n                    <h1 className=\"subtitle\">Salvar dados</h1>\r\n                    <Button>Salvar</Button>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   setPageTitle: title => dispatch(actions.setPageTitle(title))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(StorePatients)","export const cpfMask = value => {\r\n    return value\r\n        .replace(/\\D/g, '') \r\n        .replace(/(\\d{3})(\\d)/, '$1.$2') \r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n        .replace(/(-\\d{2})\\d+?$/, '$1') \r\n}\r\n\r\nexport const currencyMask = value => {\r\n\r\n    //fazer mascara de dinheiro\r\n    return value\r\n}","import api from './api'\r\n\r\nconst fetchAll = () => api.get('/patients')\r\nconst deletePatient = id => api.delete(`/patients/${id}`)\r\n\r\nexport default {\r\n    fetchAll,\r\n    deletePatient\r\n}","import React, { useEffect, useState, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from \"../../store/actions\"\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Row, Col } from 'reactstrap'\r\nimport \"./style.scss\"\r\nimport patientsService from \"../../services/patientsService\"\r\nimport Swal from \"sweetalert2\"\r\n\r\nclass Patients extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            patients: []\r\n        }\r\n    }\r\n\r\n    initialState = []\r\n\r\n    componentDidMount(){\r\n        this.props.setPageTitle(\"Gerenciar pacientes\")\r\n\r\n        this.fetchPatients()\r\n    }\r\n\r\n    fetchPatients = () => {\r\n        patientsService.fetchAll()\r\n        .then(response => {\r\n            this.setState({\r\n                patients: response.data.data\r\n            })\r\n            this.initialState = response.data.data\r\n        })\r\n    }\r\n\r\n    handleInput = e => {\r\n        const filteredPatients = this.initialState.filter(patient => {\r\n            let name = patient.name.toLocaleLowerCase()\r\n            let search = e.target.value.toLocaleLowerCase()\r\n            return name.includes(search)\r\n        })\r\n\r\n        this.setState({\r\n            patients: filteredPatients\r\n        })\r\n    }\r\n\r\n    deletePatient = id => {\r\n        Swal.fire({\r\n            title: 'Tem certeza que deseja excluir este paciente?',\r\n            text: 'Todos os registros vinculados ao paciente serão completamente excluídos!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Excluir',\r\n            cancelButtonText: 'Cancelar'\r\n        })\r\n        .then(res => {\r\n            if(res.value){\r\n                patientsService.deletePatient(id)\r\n                .then(res => {\r\n                    if(res.status === 200)\r\n                        this.fetchPatients()\r\n                        Swal.fire(\"Excluído com sucesso!\")\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"box\">\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <label htmlFor=\"search\">Pesquisar:</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control input\" \r\n                            placeholder=\"Digite aqui o nome do paciente...\" \r\n                            onChange={this.handleInput} \r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <table className=\"table table-striped table-sm table-responsive\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name:</th>\r\n                            <th>RG:</th>\r\n                            <th>Celular:</th>\r\n                            <th>Editar:</th>\r\n                            <th>Deletar:</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.patients.map((patient, index) => (\r\n                            <tr key={index}>\r\n                                <td>{patient.name}</td>\r\n                                <td>{patient.rg}</td>\r\n                                <td>{patient.phone}</td>\r\n                                <td>\r\n                                    <button onClick={() => Swal.fire('Em construção')} className=\"btn edit-button\">\r\n                                        <FontAwesomeIcon icon={faEdit} />\r\n                                    </button>\r\n                                </td>\r\n                                <td>\r\n                                    <button \r\n                                        id={patient.id} \r\n                                        onClick={ () => this.deletePatient(patient.id) } \r\n                                        className=\"btn delete-button\"\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTrash} />\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setPageTitle: title => dispatch(actions.setPageTitle(title)),\r\n    filterPatients: patient => dispatch(actions.filterPatients(patient))\r\n})\r\n\r\nconst mapStateToProps = store => {\r\n    return{\r\n        patients: store.patientsReducer.patients\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Patients)","export const filterPatients = patient => ({\r\n    type: \"FILTER_PATIENTS\",\r\n    payload: patient\r\n})","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport { Container } from 'reactstrap'\r\nimport NavBar from './Navbar'\r\nimport { Switch } from 'react-router-dom'\r\nimport { ProtectedRoute } from '../../protected.route'\r\n\r\nimport StorePatients from '../Patients/storePatient'\r\nimport Patients from '../Patients/patients'\r\n\r\nexport default props => (\r\n    <Container fluid className={classNames('content', {'is-open': props.isOpen})}>\r\n\t\t<NavBar toggle={props.toggle}/>\r\n\t\t<Switch>\r\n\t\t\t<ProtectedRoute exact path=\"/\" component={() => \"Em construção...\" } />\r\n\t\t\t<ProtectedRoute exact path=\"/cadastrar-pacientes\" component={StorePatients} />\r\n\t\t\t<ProtectedRoute exact path=\"/pacientes\" component={Patients} />          \r\n\t\t</Switch>\r\n    </Container>\r\n)","import React, { useState } from 'react'\r\nimport auth from '../../auth'\r\nimport { Container, Row, Col, Button } from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHospitalAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport './style.scss'\r\n\r\nconst Login = props => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [incorrectMessage, setIncorrectMessage] = useState(false)\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault()\r\n        \r\n        let data = {email: email, password: password}\r\n\r\n        auth.login(data, () => props.history.push(\"/\"), () => setIncorrectMessage(true))\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"form-background\" md={{size: 6, offset: 3}}>\r\n                    <form onSubmit={handleLogin}>\r\n                        <h2><FontAwesomeIcon icon={faHospitalAlt} /> Acessar</h2>\r\n                        <input onChange={e => setEmail(e.target.value)} type=\"email\" className=\"form-control\" name=\"user\" required />\r\n                        <input onChange={e => setPassword(e.target.value)} type=\"password\" className=\"form-control\" name=\"password\" required />\r\n                        { incorrectMessage ? <p>Usuário ou senha incorretos</p> : \"\" }\r\n                        <Button className=\"login-button\">Acessar</Button>\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport SideBar from './components/SideBar'\r\nimport Content from './components/Content'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './App.scss'\r\nimport Login from './components/Login'\r\n\r\nexport default () => {\r\n\r\n  const [isOpen, setOpen] = useState(true)\r\n  const toggle = () => setOpen(!isOpen)\r\n\r\n  return (\r\n    <Router>\r\n\t\t<Switch>\r\n\t\t<Route exact path=\"/login\" component={Login} />\r\n\t\t<div className=\"App wrapper\">\r\n\t\t\t<SideBar toggle={toggle} isOpen={isOpen} />\r\n\t\t\t<Content toggle={toggle} isOpen={isOpen} />\r\n\t\t</div>\r\n\t\t</Switch>\r\n    </Router>\r\n  )\r\n\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","const initState = {\r\n    pageTitle: \"Gerenciador de consultas\"\r\n}\r\n\r\nconst pageReducer = (state = initState, action) => {\r\n    switch (action.type){\r\n        case \"SET_PAGE_TITLE\":\r\n            return {\r\n              pageTitle: action.payload  \r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default pageReducer","const patientsReducer = (state = {}, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case \"FILTER_PATIENTS\":\r\n            let filteredPatients = state.patients.filter(patient => {\r\n                let name = patient.name.toLocaleLowerCase()\r\n                return name.includes(action.payload.toLocaleLowerCase())\r\n            })\r\n            return {\r\n                patients: filteredPatients\r\n            }\r\n            \r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default patientsReducer","import { combineReducers } from 'redux'\r\nimport pageReducer from './pageReducer'\r\nimport patientsReducer from './patientsReducer'\r\n\r\nexport default combineReducers ({\r\n    pageReducer,\r\n    patientsReducer\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './store/reducers/index'\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}